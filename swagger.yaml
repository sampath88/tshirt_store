openapi: 3.0.0
info:
  title: Tshirt store API
  description: LCO - a course to create API for ecomm store
  version: 1.0.0
  contact:
    email: sampath@gmail.com
    url: "https://somepath.com"

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for localhost only
    variables:
      protocol:
        enum:
          - http
          # - https
        default: http
      version:
        enum:
          - v1
          # - v2
        default: v1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
        _id:
          type: string
        createdAt:
          type: string
        photo:
          type: object
          properties:
            id:
              type: string
            secure_url:
              type: string

paths:
  /signup:
    post:
      tags:
        - Auth
      summary: creates new user
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - photo
              properties:
                name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                photo:
                  in: formdata
                  description: upload file data
                  type: file
      responses:
        200:
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        400:
          description: Some of the fields are missing
          content:
            application/json:
              schema:
                type: string
                example: All fields are required
        401:
          description: User already exists
          content:
            application/json:
              schema:
                type: string
                example: User already exists

  /login:
    post:
      tags:
        - Auth
      summary: Login to user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        200:
          description: User loged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        400:
          description: Some of the fields are missing
          content:
            application/json:
              schema:
                type: string
                example: All fields are required
        401:
          description: User already exists
          content:
            application/json:
              schema:
                type: string
                example: User already exists

  /forgotPassword:
    post:
      tags:
        - Auth
      summary: Sends password reset link to email
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  required: true
      responses:
        200:
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                 
        400:
          description: Email does not match or exist
          content:
            application/json:
              schema:
                type: string
                example: Email does not match or exist

  /password/reset/{token}:
    post:
      tags:
        - Auth
      summary: Reset password
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  required: true
                confirmPassword:
                  type: string
                  required: true
      responses:
        200:
          description: password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"

  /logout:
    get:
      tags:
        - Auth
      summary: Logout user
      produces:
        - application/json
      responses:
        200:
          description: User loged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
       
